// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow that suggests FAQ questions from user queries using GenAI.
 *
 * - suggestFaqQuestions - A function that suggests FAQ questions based on user queries.
 * - SuggestFaqQuestionsInput - The input type for the suggestFaqQuestions function.
 * - SuggestFaqQuestionsOutput - The return type for the suggestFaqQuestions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestFaqQuestionsInputSchema = z.object({
  userQueries: z
    .string()
    .describe(
      'A list of user queries or contact form inquiries, separated by newlines.'
    ),
});
export type SuggestFaqQuestionsInput = z.infer<typeof SuggestFaqQuestionsInputSchema>;

const SuggestFaqQuestionsOutputSchema = z.object({
  suggestedQuestions: z
    .string()
    .describe(
      'A list of suggested FAQ questions derived from the user queries, separated by newlines.'
    ),
});
export type SuggestFaqQuestionsOutput = z.infer<typeof SuggestFaqQuestionsOutputSchema>;

export async function suggestFaqQuestions(
  input: SuggestFaqQuestionsInput
): Promise<SuggestFaqQuestionsOutput> {
  return suggestFaqQuestionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestFaqQuestionsPrompt',
  input: {schema: SuggestFaqQuestionsInputSchema},
  output: {schema: SuggestFaqQuestionsOutputSchema},
  prompt: `You are an expert at creating FAQs. Given a list of user queries, generate a list of potential FAQ questions that address the users' needs.

  User Queries:
  {{userQueries}}

  Suggested FAQ Questions:`, // Ensure the prompt asks for a newline-separated list.
});

const suggestFaqQuestionsFlow = ai.defineFlow(
  {
    name: 'suggestFaqQuestionsFlow',
    inputSchema: SuggestFaqQuestionsInputSchema,
    outputSchema: SuggestFaqQuestionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
